void calAsy(){

	gStyle->SetOptStat(0);
	gStyle->SetOptDate(0);
	gStyle->SetOptTitle(0);

	TFile *result = new TFile("5GeV_result.root","recreate");


	TH1D *xAsy_SQ6 = new TH1D("xAsy_SQ6","xAsy_SQ6",1000,-20.0,20.0);
	TH1D *xAsy_SQ7 = new TH1D("xAsy_SQ7","xAsy_SQ7",1000,-20.0,20.0);
	TH1D *EAsy_ori = new TH1D("EAsy_ori","EAsy_ori",2000,0,20);
	TH1D *EAsy_1 = new TH1D("EAsy_1","EAsy_1",2000,0,20);
	TH1D *EAsy_2 = new TH1D("EAsy_2","EAsy_2",2000,0,20);
	TH1D *EAsy_all = new TH1D("EAsy_all","EAsy_all",2000,0,20);




	TFile *f3 = new TFile("5GeV_S3.root","OPEN");
	TFile *f1 = new TFile("5GeV_S1.root","OPEN");



	TH1D *dis_S1_SQ6 = (TH1D*)f1->Get("xdis_after_SQ6");
	TH1D *dis_S3_SQ6 = (TH1D*)f3->Get("xdis_after_SQ6");


	for(int i=1;i<1001;i++){

		if(dis_S1_SQ6->GetBinContent(i)==0)continue;
		if(dis_S3_SQ6->GetBinContent(i)==0)continue;



		xAsy_SQ6->SetBinContent(i,(-1.0*dis_S1_SQ6->GetBinContent(i)+dis_S3_SQ6->GetBinContent(i))/(dis_S1_SQ6->GetBinContent(i)+dis_S3_SQ6->GetBinContent(i)));
		cout<<(-1.0*dis_S1_SQ6->GetBinContent(i)+dis_S3_SQ6->GetBinContent(i))/(dis_S1_SQ6->GetBinContent(i)+dis_S3_SQ6->GetBinContent(i))<<endl;

	}


	xAsy_SQ6->SetLineWidth(2.0);
	xAsy_SQ6->GetXaxis()->SetTitle("local X in electron detector (cm)");
	xAsy_SQ6->GetXaxis()->SetTitleSize(0.05);
	xAsy_SQ6->GetXaxis()->SetRangeUser(-1.0,10);
	xAsy_SQ6->GetXaxis()->SetTitleOffset(1.00);
	xAsy_SQ6->GetYaxis()->SetTitle("Asymmetry");
	xAsy_SQ6->GetYaxis()->SetTitleSize(0.05);
	xAsy_SQ6->GetYaxis()->SetTitleOffset(1.00);


/*	TLine *line = new TLine(1.8, xdis_SQ6->GetMinimum(), 1.8, xdis_SQ6->GetMaximum());

	// 设置线的样式，例如颜色、线宽等。
	line->SetLineColor(kRed); // 设置线的颜色为红色
	line->SetLineWidth(2);    // 设置线宽为2

	// 画线
	line->Draw("same"); // "same"参数确保线是添加在已有的画布上。
			    //
*/			    //
	TH1D *dis_S1_SQ7 = (TH1D*)f1->Get("xdis_after_SQ7");
	TH1D *dis_S3_SQ7 = (TH1D*)f3->Get("xdis_after_SQ7");


	for(int i=1;i<1001;i++){

		if(dis_S1_SQ7->GetBinContent(i)==0)continue;
		if(dis_S3_SQ7->GetBinContent(i)==0)continue;



		xAsy_SQ7->SetBinContent(i,(-1.0*dis_S1_SQ7->GetBinContent(i)+dis_S3_SQ7->GetBinContent(i))/(dis_S1_SQ7->GetBinContent(i)+dis_S3_SQ7->GetBinContent(i)));

	}


	xAsy_SQ7->SetLineWidth(2.0);
	xAsy_SQ7->GetXaxis()->SetTitle("local X in electron detector (cm)");
	xAsy_SQ7->GetXaxis()->SetTitleSize(0.05);
	xAsy_SQ7->GetXaxis()->SetRangeUser(-1.0,10);
	xAsy_SQ7->GetXaxis()->SetTitleOffset(1.00);
	xAsy_SQ7->GetYaxis()->SetTitle("Asymmetry");
	xAsy_SQ7->GetYaxis()->SetTitleSize(0.05);
	xAsy_SQ7->GetYaxis()->SetTitleOffset(1.00);



	TH1D *dis_S1_E_all =  (TH1D*)f1->Get("energy_all");
	TH1D *dis_S3_E_all =  (TH1D*)f3->Get("energy_all");
	TH1D *dis_S1_E_1 =  (TH1D*)f1->Get("energy_acpt_1");
	TH1D *dis_S3_E_1 =  (TH1D*)f3->Get("energy_acpt_1");
	TH1D *dis_S1_E_2 =  (TH1D*)f1->Get("energy_acpt_2");
	TH1D *dis_S3_E_2 =  (TH1D*)f3->Get("energy_acpt_2");

	for(int i=1;i<2001;i++){

		if(dis_S1_E_all->GetBinContent(i)==0)continue;
		if(dis_S3_E_all->GetBinContent(i)==0)continue;



		EAsy_ori->SetBinContent(i,(-1.0*dis_S1_E_all->GetBinContent(i)+dis_S3_E_all->GetBinContent(i))/(dis_S1_E_all->GetBinContent(i)+dis_S3_E_all->GetBinContent(i)));

	}
	EAsy_ori->SetLineWidth(2.0);
	EAsy_ori->GetXaxis()->SetTitle("Energy (GeV)");
	EAsy_ori->GetXaxis()->SetTitleSize(0.05);
	EAsy_ori->GetXaxis()->SetRangeUser(-1.0,10);
	EAsy_ori->GetXaxis()->SetTitleOffset(1.00);
	EAsy_ori->GetYaxis()->SetTitle("Asymmetry");
	EAsy_ori->GetYaxis()->SetTitleSize(0.05);
	EAsy_ori->GetYaxis()->SetTitleOffset(1.00);


	for(int i=1;i<2001;i++){

		if((dis_S1_E_1->GetBinContent(i)+dis_S1_E_2->GetBinContent(i))==0)continue;
		if((dis_S3_E_1->GetBinContent(i)+dis_S3_E_2->GetBinContent(i))==0)continue;



		EAsy_all->SetBinContent(i,(-1.0*(dis_S1_E_1->GetBinContent(i)+dis_S1_E_2->GetBinContent(i))+(dis_S3_E_1->GetBinContent(i)+dis_S3_E_2->GetBinContent(i)))/((dis_S1_E_1->GetBinContent(i)+dis_S1_E_2->GetBinContent(i))+(dis_S3_E_1->GetBinContent(i)+dis_S3_E_2->GetBinContent(i))));

	}

	EAsy_all->SetLineWidth(2.0);
	EAsy_all->GetXaxis()->SetTitle("Energy (GeV)");
	EAsy_all->GetXaxis()->SetTitleSize(0.05);
	EAsy_all->GetXaxis()->SetRangeUser(-1.0,10);
	EAsy_all->GetXaxis()->SetTitleOffset(1.00);
	EAsy_all->GetYaxis()->SetTitle("Asymmetry");
	EAsy_all->GetYaxis()->SetTitleSize(0.05);
	EAsy_all->GetYaxis()->SetTitleOffset(1.00);

	for(int i=1;i<2001;i++){

		if(dis_S1_E_1->GetBinContent(i)==0)continue;
		if(dis_S3_E_1->GetBinContent(i)==0)continue;

		EAsy_1->SetBinContent(i,(-1.0*dis_S1_E_1->GetBinContent(i)+dis_S3_E_1->GetBinContent(i))/(dis_S1_E_1->GetBinContent(i)+dis_S3_E_1->GetBinContent(i)));

	}
	EAsy_1->SetLineWidth(2.0);
	EAsy_1->GetXaxis()->SetTitle("Energy (GeV)");
	EAsy_1->GetXaxis()->SetTitleSize(0.05);
	EAsy_1->GetXaxis()->SetRangeUser(-1.0,10);
	EAsy_1->GetXaxis()->SetTitleOffset(1.00);
	EAsy_1->GetYaxis()->SetTitle("Asymmetry");
	EAsy_1->GetYaxis()->SetTitleSize(0.05);
	EAsy_1->GetYaxis()->SetTitleOffset(1.00);

	for(int i=1;i<2001;i++){

		if(dis_S1_E_2->GetBinContent(i)==0)continue;
		if(dis_S3_E_2->GetBinContent(i)==0)continue;

		EAsy_2->SetBinContent(i,(-1.0*dis_S1_E_2->GetBinContent(i)+dis_S3_E_2->GetBinContent(i))/(dis_S1_E_2->GetBinContent(i)+dis_S3_E_2->GetBinContent(i)));

	}
	EAsy_2->SetLineWidth(2.0);
	EAsy_2->GetXaxis()->SetTitle("Energy (GeV)");
	EAsy_2->GetXaxis()->SetTitleSize(0.05);
	EAsy_2->GetXaxis()->SetRangeUser(-1.0,10);
	EAsy_2->GetXaxis()->SetTitleOffset(1.00);
	EAsy_2->GetYaxis()->SetTitle("Asymmetry");
	EAsy_2->GetYaxis()->SetTitleSize(0.05);
	EAsy_2->GetYaxis()->SetTitleOffset(1.00);








	result->cd();
	xAsy_SQ7->Write();
	xAsy_SQ6->Write();
	EAsy_ori->Write();
	EAsy_all->Write();
	EAsy_1->Write();
	EAsy_2->Write();





}
